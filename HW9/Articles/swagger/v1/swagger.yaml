---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/articles/{article_id}/unpublished":
    parameters:
    - name: article_id
      in: path
      description: article_id
      required: true
      schema:
        type: string
    get:
      summary: unpublished article
      tags:
      - Articles
      responses:
        '200':
          description: successful
  "/api/v1/articles/{article_id}/published":
    parameters:
    - name: article_id
      in: path
      description: article_id
      required: true
      schema:
        type: string
    get:
      summary: published article
      tags:
      - Articles
      responses:
        '200':
          description: successful
  "/api/v1/articles/{article_id}/change_status":
    parameters:
    - name: article_id
      in: path
      description: article_id
      required: true
      schema:
        type: string
    patch:
      summary: change_status article
      tags:
      - Articles
      responses:
        '200':
          description: successful
  "/api/v1/articles":
    parameters:
    - name: search
      in: query
      description: search by text in title or body articles
      schema:
        type: string
    - name: status
      in: query
      description: sort article by status published/unpublished
      schema:
        type: string
    - name: name
      in: query
      description: search article by author name
      schema:
        type: string
    - name: tags
      in: query
      description: search articles by tags
      schema:
        type: string
    - name: order
      in: query
      description: sort articles by creation date like asc/desc
      schema:
        type: string
    get:
      summary: list articles
      tags:
      - Articles
      responses:
        '200':
          description: successful
        '404':
          description: article not found
        '406':
          description: unsupported accept header
    post:
      summary: create article
      tags:
      - Articles
      description: Create article
      parameters: []
      responses:
        '201':
          description: article created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string
                status:
                  type: integer
                author_id:
                  type: integer
              required:
              - title
              - body
              - status
              - author_id
            examples:
              '0':
                summary: create article
                value:
                  title: Foo
                  body: basic
                  status: 1
                  author_id: 4
  "/api/v1/articles/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show article
      tags:
      - Articles
      description: Get article by id
      responses:
        '200':
          description: successful
        '404':
          description: article not found
    patch:
      summary: update article
      tags:
      - Articles
      description: Update article by id
      parameters:
      - name: id
        in: path
        schema:
          type: object
          properties:
            title:
              type: string
            body:
              type: string
            status:
              type: integer
            author_id:
              type: integer
          required:
          - title
          - body
          - status
          - author_id
        required: true
      responses:
        '201':
          description: article updated
        '422':
          description: invalid request
    put:
      summary: update article
      tags:
      - Articles
      description: Update article by id
      parameters:
      - name: id
        in: path
        schema:
          type: object
          properties:
            title:
              type: string
            body:
              type: string
            status:
              type: integer
            author_id:
              type: integer
          required:
          - title
          - body
          - status
          - author_id
        required: true
      responses:
        '201':
          description: article updated
        '404':
          description: article not found
    delete:
      summary: delete article
      tags:
      - Articles
      description: Delete article by id
      responses:
        '200':
          description: successful
        '404':
          description: article not found
  "/api/v1/authors":
    get:
      summary: list authors
      tags:
      - Author
      responses:
        '200':
          description: successful
    post:
      summary: create author
      tags:
      - Author
      responses:
        '200':
          description: successful
  "/api/v1/authors/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show author
      tags:
      - Author
      responses:
        '200':
          description: successful
    patch:
      summary: update author
      tags:
      - Author
      responses:
        '200':
          description: successful
    put:
      summary: update author
      tags:
      - Author
      responses:
        '200':
          description: successful
    delete:
      summary: delete author
      tags:
      - Author
      responses:
        '200':
          description: successful
  "/api/v1/comments/{comment_id}/unpublished":
    parameters:
    - name: comment_id
      in: path
      description: comment_id
      required: true
      schema:
        type: string
    get:
      summary: unpublished comment
      tags:
      - Comments
      responses:
        '200':
          description: successful
  "/api/v1/comments/{comment_id}/published":
    parameters:
    - name: comment_id
      in: path
      description: comment_id
      required: true
      schema:
        type: string
    get:
      summary: published comment
      tags:
      - Comments
      responses:
        '200':
          description: successful
  "/api/v1/comments/{comment_id}/change_status":
    parameters:
    - name: comment_id
      in: path
      description: change status comments by id to published/unpublished
      required: true
      schema:
        type: string
    patch:
      summary: change_status comment
      tags:
      - Comments
      responses:
        '200':
          description: successful
  "/api/v1/comments":
    get:
      summary: list comments
      tags:
      - Comments
      responses:
        '200':
          description: successful
    post:
      summary: create comment
      tags:
      - Comments
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                status:
                  type: integer
                author_id:
                  type: integer
                article_id:
                  type: integer
              description: Create comment
              required:
              - body
              - status
              - author_id
              - article_id
            examples:
              '0':
                summary: create comment
                value:
                  body: basic
                  status: 1
                  author_id: 10
                  article_id: 10
  "/api/v1/comments/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show comment
      tags:
      - Comments
      responses:
        '200':
          description: successful
    patch:
      summary: update comment
      tags:
      - Comments
      responses:
        '200':
          description: successful
    put:
      summary: update comment
      tags:
      - Comments
      responses:
        '200':
          description: successful
    delete:
      summary: delete comment
      tags:
      - Comments
      responses:
        '200':
          description: successful
  "/api/v1/likes":
    get:
      summary: list likes
      tags:
      - Like
      responses:
        '200':
          description: successful
    post:
      summary: create like
      tags:
      - Like
      responses:
        '200':
          description: successful
  "/api/v1/likes/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show like
      tags:
      - Like
      responses:
        '200':
          description: successful
    patch:
      summary: update like
      tags:
      - Like
      responses:
        '200':
          description: successful
    put:
      summary: update like
      tags:
      - Like
      responses:
        '200':
          description: successful
    delete:
      summary: delete like
      tags:
      - Like
      responses:
        '200':
          description: successful
  "/api/v1/tags":
    get:
      summary: list tags
      tags:
      - Tag
      responses:
        '200':
          description: successful
    post:
      summary: create tag
      tags:
      - Tag
      responses:
        '200':
          description: successful
  "/api/v1/tags/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show tag
      tags:
      - Tag
      responses:
        '200':
          description: successful
    patch:
      summary: update tag
      tags:
      - Tag
      responses:
        '200':
          description: successful
    put:
      summary: update tag
      tags:
      - Tag
      responses:
        '200':
          description: successful
    delete:
      summary: delete tag
      tags:
      - Tag
      responses:
        '200':
          description: successful
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:3000
